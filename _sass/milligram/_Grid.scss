// Breakpoints
// $mobile-maximum-width: 

// Grid
// ––––––––––––––––––––––––––––––––––––––––––––––––––

// .container is main centered wrapper with a max width of 112.0rem (1120px)
.container {
  margin: 0 auto;
  max-width: 112rem;
  padding: 0 1rem;
  position: relative;
  width: 100%;
}

// Using flexbox for the grid, inspired by Philip Walton:
// http://philipwalton.github.io/solved-by-flexbox/demos/grids/
// By default each .col within a .row will evenly take up
// available width, and the height of each .col with take
// up the height of the tallest .col in the same .row
.row {
  display: flex;
  flex-direction: column;
  padding: 0;
  width: 100%;

  &.row-no-padding {
    padding: 0;

    &>.col {
      padding: 0;
    }
  }

  // &.row-wrap {
  //   flex-wrap: wrap;
  // }

  // // Vertically Align.cols
  // // .row-* vertically aligns every .col in the .row
  // &.row-top {
  //   align-items: flex-start;
  // }

  // &.row-bottom {
  //   align-items: flex-end;
  // }

  // &.row-center {
  //   align-items: center;
  // }

  // &.row-stretch {
  //   align-items: stretch;
  // }

  // &.row-baseline {
  //   align-items: baseline;
  // }

  .col {
    display: block;

    // IE 11 required specifying the flex-basis otherwise it breaks mobile
    flex: 1 1 auto;
    margin-left: 0;
    max-width: 100%;
    width: 100%;
    padding: 0 1rem;

    // // .col-* vertically aligns an individual .col
    // .col-top {
    //   align-self: flex-start;
    // }

    // .col-bottom {
    //   align-self: flex-end;
    // }

    // .col-center {
    //   align-self: center;
    // }
  }
}

// Larger than mobile screen
@media (min-width: 40rem) {
  .row {
    flex-direction: row;
    margin-left: -1rem;
    width: calc(100% + 2.0rem);

    .col {
      margin-bottom: inherit;
      padding: 0 1rem;


      //.col Offsets
      // &.col-off-10 {
      //   margin-left: 10%;
      // }

      // &.col-off-20 {
      //   margin-left: 20%;
      // }

      &.col-off-25 {
        margin-left: 25%;
      }

      &.col-off-33 {
        margin-left: 33.3333%;
      }

      &.col-off-50 {
        margin-left: 50%;
      }

      &.col-off-66 {
        margin-left: 66.6666%;
      }

      &.col-off-75 {
        margin-left: 75%;
      }

      // &.col-off-80 {
      //   margin-left: 80%;
      // }

      // &.col-off-90 {
      //   margin-left: 90%;
      // }

      // Explicit.col Percent Sizes
      // By default each grid.col will evenly distribute
      // across the grid. However, you can specify individual
      //.cols to take up a certain size of the available area
      // &.col-10 {
      //   flex: 0 0 10%;
      //   width: 10%;
      // }

      // &.col-20 {
      //   flex: 0 0 20%;
      //   width: 20%;
      // }

      &.col-25 {
        flex: 0 0 25%;
        width: 25%;
      }

      &.col-33 {
        flex: 0 0 33.3333%;
        width: 33.3333%;
      }

      &.col-40 {
        flex: 0 0 40%;
        width: 40%;
      }

      &.col-50 {
        flex: 0 0 50%;
        width: 50%;
      }

      &.col-60 {
        flex: 0 0 60%;
        width: 60%;
      }

      &.col-66 {
        flex: 0 0 66.6666%;
        width: 66.6666%;
      }

      &.col-75 {
        flex: 0 0 75%;
        width: 75%;
      }

      // &.col-80 {
      //   flex: 0 0 80%;
      //   width: 80%;
      // }

      // &.col-90 {
      //   flex: 0 0 90%;
      //   width: 90%;
      // }

    }
  }
}
